#### PEER NETWORKING ####
nhz.enableUPNP=true

# Announce my IP address/hostname to peers and allow them to share it with other peers.
# If disabled, peer networking servlet will not be started at all.
nhz.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
nhz.peerServerPort=7774

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all IPv4 interfaces or :: to listen on all IPv4 and IPv6 interfaces
nhz.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to peers,
# and may be different from nhz.peerServerPort (useful if you do port forwarding behind a router).
nhz.myAddress=

# My platform, to be announced to peers.
nhz.myPlatform=PC

# My hallmark, if available.
nhz.myHallmark=

# A list of well known peer addresses / host names, separated by '; '.
nhz.wellKnownPeers=78.138.90.142;178.130.36.81;88.12.55.125;85.214.147.237;172.245.7.192;78.46.32.25;88.163.78.131;85.214.238.143;192.210.238.133;85.214.147.217;horizon.nhzcrypto.org;digital.nhzcrypto.org;horizon.nhzcrypto.org;digital.nhzcrypto.org

# Known bad peers to be blacklisted
nhz.knownBlacklistedPeers=

# Peers used for testnet only.
nhz.testnetPeers=nhz.woll-e.net

# Maintain active connections with at least that many peers.
nhz.maxNumberOfConnectedPublicPeers=20

# Stop adding new peers when number of known peers exceeds that many.
nxt.maxNumberOfKnownPeers=3000

# Stop removing old peers when number of known peers drops below that many.
nxt.minNumberOfKnownPeers=1000

# Peer networking connect timeout for outgoing connections.
nhz.connectTimeout=4000

# Peer networking read timeout for outgoing connections.
nhz.readTimeout=8000

# Peer networking server idle timeout, milliseconds.
nhz.peerServerIdleTimeout=30000

# Use the peer hallmark to only connect with peers above the defined push/pull hallmark thresholds.
# Disabling hallmark protection also disables weighting of peers by hallmark weight, so connecting
# to any of your peers becomes equally likely.
nhz.enableHallmarkProtection=true

# Hallmark threshold to use when sending data to peers.
nhz.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
nhz.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
nhz.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
nhz.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
nhz.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
nhz.enablePeerServerGZIPFilter=true

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6974 (peer networking), 6975 (UI) and 6976 (API) will be used.
nhz.isTestnet=false

# Save known peers in the database
nhz.savePeers=true

# Set to false to disable use of the peers database. This will not delete saved peers.
nhz.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers. Only useful
# when debugging and want to limit the peers to those in peersDb or wellKnownPeers.
nhz.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for incoming peer
# connections. This is equivalent to setting nhz.shareMyAddress=false, nhz.wellKnownPeers=,
# nhz.testnetPeers= and nhz.usePeersDb=false, and if set to true overrides those properties.
nhz.isOffline=false


#### API SERVER ####

# Accept http/json API requests.
nhz.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled.
nhz.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for http/json API requests.
nhz.apiServerPort=7776

# Host interface on which to listen for http/json API request, default localhost only.
# Set to 0.0.0.0 to allow the API server to accept requests from all network interfaces.
nhz.apiServerHost=127.0.0.1

# Idle timeout for http/json API request connections, milliseconds.
nhz.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin tools utilizing
# the http/json API.
nhz.apiResourceBase=html/ui

# Java API documentation directory, optional.
nhz.javadocResourceBase=html/doc

# Enable Cross Origin Filter for the API server.
nhz.apiServerCORS=false

# Enable SSL for the API server (also need to set nhz.keyStorePath and nhz.keyStorePassword).
nhz.apiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nhz.apiServerEnforcePOST=true

# Compress Http responses for the API server.
nhz.enableAPIServerGZIPFilter=false


#### OLD NRS USER INTERFACE ####

# Enable the deprecated NRS user interface.
nhz.enableUIServer=false

# Hosts from which to allow NRS user interface requests, if enabled.
nhz.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for NRS user interface server.
nhz.uiServerPort=7775

# Host interface for NRS user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
nhz.uiServerHost=127.0.0.1

# Idle timeout for NRS user interface server, milliseconds.
nhz.uiServerIdleTimeout=30000

# Directory with html and javascript files for the NRS client user interface.
nhz.uiResourceBase=html/nrs

# Enable Cross Origin Filter for NRS user interface server.
nhz.uiServerCORS=false

# Enable SSL for the NRS user interface (also need to set nhz.keyStorePath and nhz.keyStorePassword).
nhz.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nhz.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#nhz.log=nhz.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#nhz.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
nhz.enableLogTraceback=false

# Enable logging of exception stack traces.
nhz.enableStackTraces=true

# Enable logging of Jetty messages.
#nhz.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
nhz.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging purposes.
nhz.debugTraceAccounts=

# File name for logging tracked account balances.
nhz.debugTraceLog=nhz-trace.csv

# Separator character for trace log.
nhz.debugTraceSeparator=\t

# Quote character for trace log.
nhz.debugTraceQuote="

# Log changes to unconfirmed balances.
nhz.debugLogUnconfirmed=false


#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The nhz_db folder is expected to be in the current working directory, will be created if missing.
nhz.dbUrl=jdbc:h2:nhz_db/nhz;DB_CLOSE_ON_EXIT=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true
nhz.testDbUrl=jdbc:h2:nhz_test_db/nhz;DB_CLOSE_ON_EXIT=FALSE

# Database connection timeout in seconds.
nhz.dbLoginTimeout=70

# Database default lock timeout in seconds.
nhz.dbDefaultLockTimeout=10

# Maximum simultaneous database connections.
nhz.maxDbConnections=10

# The memory allocated to database cache, in kB.
# If set to 0, defaults to 50 % of the memory available to the JVM.
nhz.dbCacheKB=0



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking server only.
nhz.peerServerDoSFilter.maxRequestsPerSec=30
nhz.peerServerDoSFilter.delayMs=1000
nhz.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
nhz.keyStorePath=keystore
nhz.keyStorePassword=password



#### Developers only ####

# Force re-validation of blocks and transaction at start.
nhz.forceValidate=false

# Print a list of peers having this version on exit.
nhz.dumpPeersVersion=

# Disable Forging? (if set to true)
nhz.dontForge=false

nhz.xbridge.host=127.0.0.1
nhz.xbridge.port=30330